plugins {
	id 'java'
	id 'idea'
	id 'eclipse'
	id 'jacoco'
	id 'maven'
	id 'org.springframework.boot' version '2.1.1.RELEASE'
	id 'com.palantir.docker' version '0.20.1'
}

apply plugin: 'io.spring.dependency-management'

group = 'mygroup'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	jcenter()
	mavenCentral()
}

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Lombok
	implementation 'org.projectlombok:lombok:1.18.4'
	annotationProcessor 'org.projectlombok:lombok:1.18.4'
	
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

	//Prometheus
	implementation 'org.springframework.metrics:spring-metrics:latest.release'
	implementation 'io.micrometer:micrometer-core:latest.release'
	implementation 'io.micrometer:micrometer-registry-prometheus:latest.release'

}

bootJar {
	mainClassName = 'com.zebra.savanna.example.ExampleApplication'
}

docker {
	name "${project.group}/${jar.archiveBaseName.get()}"
	// use the absolute path of the jar to add it to Docker's build context
	files jar.archiveFile.get().asFile.absolutePath
	// provide the name of the jar (that has already been added to the build context) as a build argument so the jar
	// can be copied into the container
	buildArgs(['JAR_FILE': "${jar.getArchiveFileName().get()}"])
}

jacoco {
	toolVersion = "0.8.2"
	reportsDir = file("$buildDir/customJacocoReportDir")
}
